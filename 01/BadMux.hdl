// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/** 
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

// This was also made by first finding the canonical representation. 
// Note that this is not the best implementation of MUX. Renamed this file
// to BadMux after practicing more boolean algebra and finding a 
// much simpler solution.
CHIP BadMux {
    IN a, b, sel;
    OUT out;

    PARTS:
    Not(in=a, out=nota);
    Not(in=b, out=notb);
    Not(in=sel, out=notsel);

    // A half of the chip
    And(a=a, b=notb, out=anda1);
    And(a=anda1, b=notsel, out=anda2);
    And(a=a, b=b, out=anda3);
    And(a=anda3, b=notsel, out=anda4);

    // B half of the chip
    And(a=nota, b=b, out=andb1);
    And(a=andb1, b=sel, out=andb2);
    And(a=a, b=b, out=andb3);
    And(a=andb3, b=sel, out=andb4);

    // Or layer
    Or(a=anda2, b=anda4, out=or1);
    Or(a=or1, b=andb2, out=or2);
    Or(a=or2, b=andb4, out=out);
}