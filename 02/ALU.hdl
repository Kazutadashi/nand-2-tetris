// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input
        nx, // negate the x input
        zy, // zero the y input
        ny, // negate the y input
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
    
    // The zx bit
    Not16(in=x, out=notx);
    Add16(a=x, b=notx, out=all1x);
    Not16(in=all1x, out=all0x);
    Mux16(a=x, b=all0x, sel=zx, out=xAfterzx);

    // The nx bit
    Not16(in=xAfterzx, out=notxAfterzx);
    Mux16(a=xAfterzx, b=notxAfterzx, sel=nx, out=xAfternx);

    // The zy bit
    Not16(in=y, out=noty);
    Add16(a=y, b=noty, out=all1y);
    Not16(in=all1y, out=all0y);
    Mux16(a=y, b=all0y, sel=zy, out=yAfterzy);

    // The ny bit
    Not16(in=yAfterzy, out=notyAfterzy);
    Mux16(a=yAfterzy, b=notyAfterzy, sel=ny, out=yAfterny);

    // The f bit
    And16(a=xAfternx, b=yAfterny, out=nxAndny);
    Add16(a=xAfternx, b=yAfterny, out=nxPlusny);
    Mux16(a=nxAndny, b=nxPlusny, sel=f, out=xfy);

    // The no bit and stats
    Not16(in=xfy, out=notxfy);
    Mux16(a=xfy, b=notxfy, sel=no, out=final, out[15]=ng);
    
    Not16(in=final, out=notfinal);  // This is used because this emulator does not support using the OUT pins as chip inputs
    Not16(in=notfinal, out=out);
    
    Or16Way(in=final, out=finalOR);  
    Not(in=finalOR, out=zr);                               

}