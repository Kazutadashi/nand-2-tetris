// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Inc16.hdl

// This chip works by checking if any 0 had existed before the current bit
// If so, it will no longer flip the bit.
// Unfortunately this is a "bit" slow, as each bit must check all
// of the bits that came before it

/**
 * 16-bit incrementer:
 * out = in + 1 (arithmetic addition)
 */

CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
    Not(in=in[0], out=out[0]);  // This one will always be flipped regardless

    And(a=in[0], b=in[1], out=and1);
    Not(in=in[1], out=not1);
    Mux(a=in[1], b=not1, sel=in[0], out=out[1]);

    And(a=and1, b=in[2], out=and2);
    Not(in=in[2], out=not2);
    Mux(a=in[2], b=not2, sel=and1, out=out[2]);

    And(a=and2, b=in[3], out=and3);
    Not(in=in[3], out=not3);
    Mux(a=in[3], b=not3, sel=and2, out=out[3]);

    And(a=and3, b=in[4], out=and4);
    Not(in=in[4], out=not4);
    Mux(a=in[4], b=not4, sel=and3, out=out[4]);

    And(a=and4, b=in[5], out=and5);
    Not(in=in[5], out=not5);
    Mux(a=in[5], b=not5, sel=and4, out=out[5]);

    And(a=and5, b=in[6], out=and6);
    Not(in=in[6], out=not6);
    Mux(a=in[6], b=not6, sel=and5, out=out[6]);

    And(a=and6, b=in[7], out=and7);
    Not(in=in[7], out=not7);
    Mux(a=in[7], b=not7, sel=and6, out=out[7]);

    And(a=and7, b=in[8], out=and8);
    Not(in=in[8], out=not8);
    Mux(a=in[8], b=not8, sel=and7, out=out[8]);

    And(a=and8, b=in[9], out=and9);
    Not(in=in[9], out=not9);
    Mux(a=in[9], b=not9, sel=and8, out=out[9]);

    And(a=and9, b=in[10], out=and10);
    Not(in=in[10], out=not10);
    Mux(a=in[10], b=not10, sel=and9, out=out[10]);

    And(a=and10, b=in[11], out=and11);
    Not(in=in[11], out=not11);
    Mux(a=in[11], b=not11, sel=and10, out=out[11]);

    And(a=and11, b=in[12], out=and12);
    Not(in=in[12], out=not12);
    Mux(a=in[12], b=not12, sel=and11, out=out[12]);

    And(a=and12, b=in[13], out=and13);
    Not(in=in[13], out=not13);
    Mux(a=in[13], b=not13, sel=and12, out=out[13]);

    And(a=and13, b=in[14], out=and14);
    Not(in=in[14], out=not14);
    Mux(a=in[14], b=not14, sel=and13, out=out[14]);

    And(a=and14, b=in[15], out=and15);
    Not(in=in[15], out=not15);
    Mux(a=in[15], b=not15, sel=and14, out=out[15]);


}